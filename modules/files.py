from telebot import TeleBot
from telebot.types import Message, CallbackQuery
import keyboards
import logging
import os
from modules.pikbest_downloader import PikbestDownloader
import config
import json

logger = logging.getLogger(__name__)

class FileManager:
    def __init__(self, bot: TeleBot, db):
        self.bot = bot
        self.db = db
        
        # Kh·ªüi t·∫°o PikbestDownloader v·ªõi th√¥ng tin ƒëƒÉng nh·∫≠p t·ª´ config
        cookies = getattr(config, 'PIKBEST_COOKIES', None)
        username = getattr(config, 'PIKBEST_USERNAME', None)
        password = getattr(config, 'PIKBEST_PASSWORD', None)
        
        # Th·ª≠ t·∫£i cookie t·ª´ file n·∫øu kh√¥ng c√≥ cookie trong config
        if not cookies:
            cookies_file = 'pikbest_cookies.json'
            if os.path.exists(cookies_file):
                with open(cookies_file, 'r') as f:
                    cookies = json.load(f)
        
        self.downloader = PikbestDownloader(
            username=username,
            password=password,
            cookies=cookies
        )
        
        # L∆∞u tr·∫°ng th√°i ng∆∞·ªùi d√πng
        self.user_states = {}
    
    def show_download_menu(self, chat_id: int, message_id: int) -> None:
        """Hi·ªÉn th·ªã menu t·∫£i file"""
        self.bot.edit_message_text(
            "üì• *Menu t·∫£i file*\n\n"
            "Ch·ªçn m·ªôt t√πy ch·ªçn b√™n d∆∞·ªõi ƒë·ªÉ t√¨m v√† t·∫£i file:",
            chat_id,
            message_id,
            parse_mode="Markdown",
            reply_markup=keyboards.download_files_menu()
        )
    
    def show_file_list(self, chat_id: int, message_id: int) -> None:
        """Hi·ªÉn th·ªã danh s√°ch file"""
        self.bot.edit_message_text(
            "üìÅ *Danh s√°ch file*\n\n"
            "Ch·ª©c nƒÉng n√†y ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn. Vui l√≤ng quay l·∫°i sau.",
            chat_id,
            message_id,
            parse_mode="Markdown",
            reply_markup=keyboards.back_button("download_files")
        )
    
    def search_file(self, chat_id: int, message_id: int) -> None:
        """Hi·ªÉn th·ªã form t√¨m ki·∫øm file"""
        self.bot.edit_message_text(
            "üîç *T√¨m ki·∫øm file*\n\n"
            "Ch·ª©c nƒÉng n√†y ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn. Vui l√≤ng quay l·∫°i sau.",
            chat_id,
            message_id,
            parse_mode="Markdown",
            reply_markup=keyboards.back_button("download_files")
        )
    
    def show_popular_files(self, chat_id: int, message_id: int) -> None:
        """Hi·ªÉn th·ªã danh s√°ch file ph·ªï bi·∫øn"""
        self.bot.edit_message_text(
            "üìä *File ph·ªï bi·∫øn*\n\n"
            "Ch·ª©c nƒÉng n√†y ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn. Vui l√≤ng quay l·∫°i sau.",
            chat_id,
            message_id,
            parse_mode="Markdown",
            reply_markup=keyboards.back_button("download_files")
        )
    
    def show_newest_files(self, chat_id: int, message_id: int) -> None:
        """Hi·ªÉn th·ªã danh s√°ch file m·ªõi nh·∫•t"""
        self.bot.edit_message_text(
            "üÜï *File m·ªõi nh·∫•t*\n\n"
            "Ch·ª©c nƒÉng n√†y ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn. Vui l√≤ng quay l·∫°i sau.",
            chat_id,
            message_id,
            parse_mode="Markdown",
            reply_markup=keyboards.back_button("download_files")
        )
    
    def download_from_url(self, chat_id: int, message_id: int) -> None:
        """Hi·ªÉn th·ªã form nh·∫≠p URL ƒë·ªÉ t·∫£i file"""
        # L∆∞u tr·∫°ng th√°i ng∆∞·ªùi d√πng
        self.user_states[chat_id] = {
            'state': 'waiting_for_download_url'
        }
        
        try:
            # S·ª≠ d·ª•ng HTML thay v√¨ Markdown ƒë·ªÉ tr√°nh l·ªói ph√¢n t√≠ch c√∫ ph√°p
            self.bot.edit_message_text(
                "üîó <b>T·∫£i file t·ª´ URL</b>\n\n"
                "Vui l√≤ng g·ª≠i URL t·ª´ Pikbest.com ƒë·ªÉ t·∫£i file.\n\n"
                "V√≠ d·ª•: https://pikbest.com/templates/business-card-template_123456.html",
                chat_id,
                message_id,
                parse_mode="HTML",  # Thay ƒë·ªïi t·ª´ Markdown sang HTML
                reply_markup=keyboards.back_button("download_files")
            )
        except Exception as e:
            logger.error(f"L·ªói khi hi·ªÉn th·ªã form t·∫£i file: {e}")
            # Th·ª≠ g·ª≠i l·∫°i kh√¥ng c√≥ ƒë·ªãnh d·∫°ng ƒë·∫∑c bi·ªát
            try:
                self.bot.edit_message_text(
                    "üîó T·∫£i file t·ª´ URL\n\n"
                    "Vui l√≤ng g·ª≠i URL t·ª´ Pikbest.com ƒë·ªÉ t·∫£i file.\n\n"
                    "V√≠ d·ª•: https://pikbest.com/templates/business-card-template_123456.html",
                    chat_id,
                    message_id,
                    parse_mode=None,  # Kh√¥ng s·ª≠ d·ª•ng ƒë·ªãnh d·∫°ng ƒë·∫∑c bi·ªát
                    reply_markup=keyboards.back_button("download_files")
                )
            except Exception as inner_e:
                logger.error(f"L·ªói khi g·ª≠i tin nh·∫Øn kh√¥ng ƒë·ªãnh d·∫°ng: {inner_e}")
    
    def process_download_url(self, message: Message) -> None:
        """X·ª≠ l√Ω URL t·∫£i file t·ª´ ng∆∞·ªùi d√πng"""
        chat_id = message.chat.id
        url = message.text.strip()
        
        # X√≥a tr·∫°ng th√°i ng∆∞·ªùi d√πng
        if chat_id in self.user_states:
            del self.user_states[chat_id]
        
        # G·ª≠i th√¥ng b√°o ƒëang x·ª≠ l√Ω
        try:
            processing_msg = self.bot.send_message(
                chat_id,
                "‚è≥ <b>ƒêang x·ª≠ l√Ω y√™u c·∫ßu t·∫£i file...</b> Vui l√≤ng ƒë·ª£i trong gi√¢y l√°t.",
                parse_mode="HTML"
            )
        except Exception as e:
            logger.error(f"L·ªói khi g·ª≠i th√¥ng b√°o x·ª≠ l√Ω: {e}")
            processing_msg = self.bot.send_message(
                chat_id,
                "‚è≥ ƒêang x·ª≠ l√Ω y√™u c·∫ßu t·∫£i file... Vui l√≤ng ƒë·ª£i trong gi√¢y l√°t."
            )
        
        # Ki·ªÉm tra tr·∫°ng th√°i ƒëƒÉng nh·∫≠p tr∆∞·ªõc
        if not self.downloader.check_login_status():
            try:
                self.bot.edit_message_text(
                    "‚ùå <b>L·ªói ƒëƒÉng nh·∫≠p</b>\n\n"
                    "Bot ch∆∞a ƒëƒÉng nh·∫≠p v√†o Pikbest ho·∫∑c phi√™n ƒëƒÉng nh·∫≠p ƒë√£ h·∫øt h·∫°n.\n"
                    "Vui l√≤ng li√™n h·ªá qu·∫£n tr·ªã vi√™n ƒë·ªÉ c·∫≠p nh·∫≠t cookie.",
                    chat_id,
                    processing_msg.message_id,
                    parse_mode="HTML",
                    reply_markup=keyboards.back_button("download_files")
                )
            except Exception as e:
                logger.error(f"L·ªói khi g·ª≠i th√¥ng b√°o l·ªói ƒëƒÉng nh·∫≠p: {e}")
            return
        
        # T·∫£i file
        file_path, error = self.downloader.download_file(url)
        
        if error:
            # G·ª≠i th√¥ng b√°o l·ªói
            try:
                self.bot.edit_message_text(
                    f"‚ùå <b>L·ªói khi t·∫£i file</b>\n\n{error}",
                    chat_id,
                    processing_msg.message_id,
                    parse_mode="HTML",
                    reply_markup=keyboards.back_button("download_files")
                )
            except Exception as e:
                logger.error(f"L·ªói khi g·ª≠i th√¥ng b√°o l·ªói t·∫£i file: {e}")
            return
        
        try:
            # G·ª≠i file cho ng∆∞·ªùi d√πng
            with open(file_path, 'rb') as file:
                file_name = os.path.basename(file_path)
                
                # Ki·ªÉm tra lo·∫°i file v√† g·ª≠i ph√π h·ª£p
                if file_path.lower().endswith(('.jpg', '.jpeg', '.png', '.gif')):
                    self.bot.send_photo(
                        chat_id,
                        file,
                        caption=f"üì• <b>File ƒë√£ t·∫£i:</b> {file_name}",
                        parse_mode="HTML"
                    )
                elif file_path.lower().endswith(('.mp4', '.avi', '.mov')):
                    self.bot.send_video(
                        chat_id,
                        file,
                        caption=f"üì• <b>File ƒë√£ t·∫£i:</b> {file_name}",
                        parse_mode="HTML"
                    )
                else:
                    self.bot.send_document(
                        chat_id,
                        file,
                        caption=f"üì• <b>File ƒë√£ t·∫£i:</b> {file_name}",
                        parse_mode="HTML"
                    )
                
                # G·ª≠i th√¥ng b√°o th√†nh c√¥ng
                try:
                    self.bot.edit_message_text(
                        "‚úÖ <b>T·∫£i file th√†nh c√¥ng!</b>\n\n"
                        "B·∫°n c√≥ th·ªÉ ti·∫øp t·ª•c t·∫£i file kh√°c ho·∫∑c quay l·∫°i menu ch√≠nh.",
                        chat_id,
                        processing_msg.message_id,
                        parse_mode="HTML",
                        reply_markup=keyboards.download_again_keyboard()
                    )
                except Exception as e:
                    logger.error(f"L·ªói khi g·ª≠i th√¥ng b√°o th√†nh c√¥ng: {e}")
        except Exception as e:
            logger.error(f"L·ªói khi g·ª≠i file: {e}")
            try:
                self.bot.edit_message_text(
                    f"‚ùå <b>L·ªói khi g·ª≠i file</b>\n\n{str(e)}",
                    chat_id,
                    processing_msg.message_id,
                    parse_mode="HTML",
                    reply_markup=keyboards.back_button("download_files")
                )
            except Exception as inner_e:
                logger.error(f"L·ªói khi g·ª≠i th√¥ng b√°o l·ªói g·ª≠i file: {inner_e}")
        finally:
            # X√≥a file sau khi g·ª≠i
            self.downloader.cleanup_file(file_path) 